import Head from 'next/head'
import { Inter } from 'next/font/google'
import { GET_CONTACT_LIST } from '@/query'
import { useQuery } from '@apollo/client'
import { type Contact, type ContactList } from '@/types/contact'
import { useDispatch, useSelector } from '@/redux/store'
import { addFavorit, deleteFavorit } from '@/redux/slices/favorit'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const dispatch = useDispatch()
  const favorit = useSelector((state) => state.favorit.contacts)
  const favoritIds = favorit.map(({ id }) => id)
  const { loading, error, data, refetch } = useQuery<ContactList>(GET_CONTACT_LIST, {
    variables: {
      limit: 10,
      offset: 0,
      order_by: { created_at: 'asc' },
      where: {
        id: { _nin: favoritIds },
        first_name: { _like: '%%' }
      }
    }
  })
  if (loading) return <p>Loading...</p>
  if (error != null) return <p>Error: {error.message}</p>
  const { contact } = data ?? { contact: [] }

  const handleDeleteFavorit = async (contact: Contact) => {
    try {
      dispatch(deleteFavorit(contact))
      await refetch()
    } catch (error) {
      console.error('Error deleting favorit:', error)
    }
  }

  const handleAddFavorit = async (contact: Contact) => {
    try {
      dispatch(addFavorit(contact))
      await refetch()
    } catch (error) {
      console.error('Error adding favorit:', error)
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${inter.className}`}>
        <div>favorit:</div>
        {favorit.map((item) => (
          <div key={item.id}>
            {item.id}
            {item.first_name}
            <button
              onClick={async () => {
                await handleDeleteFavorit(item)
              }}
            >
              Delete button
            </button>
          </div>
        ))}
        <div>regular:</div>
        {contact.map((item) => (
          <div key={item.id}>
            {item.id}
            {item.first_name}
            <button
              onClick={async () => {
                await handleAddFavorit(item)
              }}
            >
              Add button
            </button>
          </div>
        ))}
      </main>
    </>
  )
}
